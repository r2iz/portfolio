---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

const posts: CollectionEntry<"blog">[] = await getCollection("blog");

posts.sort((a, b) => (a.data.date < b.data.date ? 1 : -1));

const techPosts = posts.filter((post) => post.data.category === "tech");
const dailyPosts = posts.filter((post) => post.data.category === "daily");

const categoryLabels = {
    tech: "技術",
    daily: "日常",
};
---

<Layout title="Blog | ねれ" description="ねれのブログ。">
    <main id="main" class="container">
        <div class="back-nav">
            <a class="back-link" href="/">← ホームへ</a>
        </div>
        <div class="page-header">
            <h1>Blog</h1>
        </div>

        <div class="category-nav">
            <button class="category-btn active" data-category="all"
                >すべて</button
            >
            <button class="category-btn" data-category="tech">技術</button>
            <button class="category-btn" data-category="daily">日常</button>
        </div>

        {
            posts.length === 0 ? (
                <p class="empty-state">まだ記事がありません。</p>
            ) : (
                <>
                    <div class="posts-section" data-category="all">
                        <ul class="plain post-list">
                            {posts.map((post) => (
                                <li
                                    class="post-item"
                                    data-category={post.data.category}
                                >
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <span class="post-category">
                                                {
                                                    categoryLabels[
                                                        post.data.category
                                                    ]
                                                }
                                            </span>
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                        </div>
                                        {post.data.description && (
                                            <p class="post-desc">
                                                {post.data.description}
                                            </p>
                                        )}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div class="posts-section hidden" data-category="tech">
                        <ul class="plain post-list">
                            {techPosts.map((post) => (
                                <li class="post-item">
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <span class="post-category">
                                                {
                                                    categoryLabels[
                                                        post.data.category
                                                    ]
                                                }
                                            </span>
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                        </div>
                                        {post.data.description && (
                                            <p class="post-desc">
                                                {post.data.description}
                                            </p>
                                        )}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div class="posts-section hidden" data-category="daily">
                        <ul class="plain post-list">
                            {dailyPosts.map((post) => (
                                <li class="post-item">
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <span class="post-category">
                                                {
                                                    categoryLabels[
                                                        post.data.category
                                                    ]
                                                }
                                            </span>
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                        </div>
                                        {post.data.description && (
                                            <p class="post-desc">
                                                {post.data.description}
                                            </p>
                                        )}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>
                </>
            )
        }
    </main>

    <style>
        .container {
            max-width: 760px;
            margin: 0 auto;
            padding: 40px 24px 80px;
        }

        .back-nav {
            margin-bottom: 32px;
        }

        .page-header {
            margin-bottom: 32px;
            display: grid;
            gap: 12px;
        }

        .page-header h1 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 500;
            letter-spacing: 0.12em;
            text-transform: uppercase;
            color: var(--color-text);
        }

        .category-nav {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-bottom: 28px;
            padding: 6px;
            border: 1px solid var(--color-border);
            border-radius: 999px;
            background: var(--color-card-bg);
        }

        .category-btn {
            padding: 8px 16px;
            border: 1px solid transparent;
            border-radius: 999px;
            background: transparent;
            color: var(--color-text-muted);
            font-size: 0.72rem;
            letter-spacing: 0.08em;
            text-transform: uppercase;
            cursor: pointer;
            transition:
                color 0.2s ease,
                border-color 0.2s ease,
                background-color 0.2s ease,
                transform 0.2s ease;
        }

        .category-btn:hover {
            color: var(--color-text);
            transform: translateY(-1px);
        }

        .category-btn.active {
            color: var(--color-text);
            border-color: var(--color-border-strong);
            background: var(--color-subtle);
        }

        .posts-section {
            display: grid;
            gap: 16px;
        }

        .posts-section.hidden {
            display: none;
        }

        .post-list {
            list-style: none;
            margin: 0;
            padding: 0;
            display: grid;
            gap: 16px;
        }

        .post-item {
            list-style: none;
        }

        .post-link {
            position: relative;
            display: grid;
            gap: 12px;
            padding: 20px 48px 20px 24px;
            border: 1px solid var(--color-border);
            border-radius: 8px;
            background: var(--color-card-bg);
            transition:
                border-color 0.24s ease,
                background-color 0.24s ease,
                transform 0.24s ease;
        }

        .post-link::after {
            content: "->";
            position: absolute;
            top: 50%;
            right: 24px;
            transform: translateY(-50%);
            font-size: 0.82rem;
            color: var(--color-text-muted);
            transition:
                transform 0.24s ease,
                color 0.24s ease;
        }

        .post-link:hover {
            transform: translateY(-4px);
            border-color: var(--color-border-strong);
            background: var(--color-subtle);
        }

        .post-link:hover::after {
            transform: translate(4px, -50%);
            color: var(--color-text);
        }

        .post-title {
            font-size: 0.98rem;
            font-weight: 500;
            letter-spacing: 0.04em;
            color: var(--color-text);
        }

        .post-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            align-items: center;
            font-size: 0.72rem;
            letter-spacing: 0.08em;
            text-transform: uppercase;
            color: var(--color-text-muted);
        }

        .post-meta time {
            color: var(--color-text);
            font-variant-numeric: tabular-nums;
        }

        .post-category {
            display: inline-flex;
            align-items: center;
            padding: 4px 10px;
            border-radius: 999px;
            border: 1px solid var(--color-border);
            background: var(--color-subtle);
            color: var(--color-text);
        }

        .post-desc {
            margin: 0;
            font-size: 0.84rem;
            line-height: 1.6;
            color: var(--color-text-muted);
            max-width: 52ch;
        }

        .empty-state {
            text-align: center;
            color: var(--color-text-muted);
            font-size: 0.88rem;
        }

        @media (max-width: 640px) {
            .container {
                padding: 32px 16px 64px;
            }

            .page-header {
                margin-bottom: 24px;
            }

            .category-nav {
                width: 100%;
                justify-content: center;
            }

            .post-link {
                padding: 18px 44px 18px 20px;
            }

            .post-meta {
                gap: 8px;
            }
        }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const categoryBtns =
                document.querySelectorAll<HTMLButtonElement>(".category-btn");
            const postsSections =
                document.querySelectorAll<HTMLElement>(".posts-section");

            categoryBtns.forEach((btn) => {
                btn.setAttribute(
                    "aria-pressed",
                    btn.classList.contains("active") ? "true" : "false"
                );
                btn.addEventListener(
                    "click",
                    function (this: HTMLButtonElement) {
                        const targetCategory = this.dataset.category;

                        categoryBtns.forEach((b) => {
                            b.classList.remove("active");
                            b.setAttribute("aria-pressed", "false");
                        });
                        this.classList.add("active");
                        this.setAttribute("aria-pressed", "true");

                        postsSections.forEach((section) => {
                            if (section.dataset.category === targetCategory) {
                                section.classList.remove("hidden");
                            } else {
                                section.classList.add("hidden");
                            }
                        });
                    }
                );
            });
        });
    </script>
</Layout>
