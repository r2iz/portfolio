---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

const posts: CollectionEntry<"blog">[] = await getCollection("blog");

posts.sort((a, b) => (a.data.date < b.data.date ? 1 : -1));

const techPosts = posts.filter((post) => post.data.category === "tech");
const dailyPosts = posts.filter((post) => post.data.category === "daily");

const categoryLabels = {
    tech: "技術",
    daily: "日常",
};
---

<Layout title="Blog | ねれ" description="ねれのブログ。">
    <main id="main" class="container">
        <div class="back-nav">
            <a class="back-link" href="/">← ホームへ</a>
        </div>
        <div class="page-header">
            <h1>Blog</h1>
        </div>

        <div class="category-nav">
            <button class="category-btn active" data-category="all"
                >すべて</button
            >
            <button class="category-btn" data-category="tech">技術</button>
            <button class="category-btn" data-category="daily">日常</button>
        </div>

        {
            posts.length === 0 ? (
                <p class="empty-state">まだ記事がありません。</p>
            ) : (
                <>
                    <div class="posts-section" data-category="all">
                        <ul class="plain post-list">
                            {posts.map((post) => (
                                <li
                                    class="post-item"
                                    data-category={post.data.category}
                                >
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <span class="post-category">
                                                {
                                                    categoryLabels[
                                                        post.data.category
                                                    ]
                                                }
                                            </span>
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                            {post.data.description && (
                                                <span class="post-desc">
                                                    {post.data.description}
                                                </span>
                                            )}
                                        </div>
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div class="posts-section hidden" data-category="tech">
                        <ul class="plain post-list">
                            {techPosts.map((post) => (
                                <li class="post-item">
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                            {post.data.description && (
                                                <span class="post-desc">
                                                    {post.data.description}
                                                </span>
                                            )}
                                        </div>
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div class="posts-section hidden" data-category="daily">
                        <ul class="plain post-list">
                            {dailyPosts.map((post) => (
                                <li class="post-item">
                                    <a
                                        class="post-link"
                                        href={`/blog/${post.slug}`}
                                    >
                                        <div class="post-title">
                                            {post.data.title}
                                        </div>
                                        <div class="post-meta">
                                            <time
                                                datetime={post.data.date.toISOString()}
                                            >
                                                {post.data.date.toLocaleDateString(
                                                    "ja-JP"
                                                )}
                                            </time>
                                            {post.data.description && (
                                                <span class="post-desc">
                                                    {post.data.description}
                                                </span>
                                            )}
                                        </div>
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>
                </>
            )
        }
    </main>

    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 32px 24px;
        }

        .back-nav {
            margin-bottom: 48px;
        }

        .back-link {
            color: var(--color-text-muted);
            text-decoration: none;
            font-size: 0.875rem;
            transition: color 0.2s ease;
        }

        .back-link:hover {
            color: var(--color-text);
        }
        .page-header {
            margin-bottom: 56px;
            text-align: left;
        }

        .page-header h1 {
            font-size: 1.5rem;
            margin: 0;
            font-weight: 400;
            letter-spacing: -0.01em;
            color: var(--color-text);
        }

        .category-nav {
            display: flex;
            gap: 8px;
            margin-bottom: 32px;
            padding: 4px;
            background: var(--color-card-bg);
            border: 1px solid var(--color-border);
            border-radius: 8px;
            width: fit-content;
        }

        .category-btn {
            padding: 8px 16px;
            border: none;
            background: transparent;
            color: var(--color-text-muted);
            font-size: 0.875rem;
            font-weight: 500;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .category-btn:hover {
            color: var(--color-text);
            background: var(--color-hover);
        }

        .category-btn.active {
            color: var(--color-text);
            background: var(--color-accent);
            background: white;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .posts-section.hidden {
            display: none;
        }

        .post-category {
            display: inline-block;
            padding: 2px 6px;
            font-size: 0.75rem;
            font-weight: 500;
            border-radius: 4px;
            background: var(--color-accent);
            color: white;
        }
        .empty-state {
            text-align: center;
            color: var(--color-text-muted);
            font-size: 1rem;
        }

        .post-list {
            border: 1px solid var(--color-border);
            border-radius: 4px;
            overflow: hidden;
            background: var(--color-card-bg);
        }

        .post-item:not(:last-child) {
            border-bottom: 1px solid var(--color-border);
        }

        .post-link {
            display: block;
            padding: 24px;
            color: var(--color-text);
            text-decoration: none;
            transition: background-color 0.2s ease;
        }

        .post-link:hover {
            background-color: var(--color-hover);
        }

        .post-title {
            font-size: 1.125rem;
            font-weight: 500;
            margin-bottom: 8px;
            line-height: 1.4;
        }

        .post-meta {
            display: flex;
            align-items: center;
            gap: 16px;
            font-size: 0.875rem;
            color: var(--color-text-muted);
        }

        .post-desc {
            color: var(--color-text-muted);
        }

        @media (max-width: 640px) {
            .container {
                padding: 24px 16px;
            }

            .back-nav {
                margin-bottom: 32px;
            }

            .page-header {
                margin-bottom: 40px;
            }

            .page-header h1 {
                font-size: 1.375rem;
            }

            .post-link {
                padding: 20px 16px;
            }

            .post-meta {
                flex-direction: column;
                align-items: flex-start;
                gap: 4px;
            }
        }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const categoryBtns = document.querySelectorAll(".category-btn");
            const postsSections = document.querySelectorAll(".posts-section");

            categoryBtns.forEach((btn) => {
                btn.addEventListener("click", function () {
                    const targetCategory = this.dataset.category;

                    // ボタンのアクティブ状態を更新
                    categoryBtns.forEach((b) => b.classList.remove("active"));
                    this.classList.add("active");

                    // セクションの表示/非表示を切り替え
                    postsSections.forEach((section) => {
                        if (section.dataset.category === targetCategory) {
                            section.classList.remove("hidden");
                        } else {
                            section.classList.add("hidden");
                        }
                    });
                });
            });
        });
    </script>
</Layout>
